# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

    # LoadBalancerCount = 1
    # (1..LoadBalancerCount).each do |i|
    #     config.vm.define "k8s-lb-#{i}" do |master|
    #         master.vm.box = "ubuntu-22.04.3"
    #         master.vm.hostname = "k8s-lb-#{i}"
    #         master.vm.network "private_network", ip: "172.16.1.1#{i}"
    #         master.vm.provider "virtualbox" do |vm|
    #             vm.name = "k8s-lb-#{i}"
    #             vm.memory = 2048
    #             vm.cpus = 2
    #         end
    #     end
    # end

    MasterCount = 1
    (1..MasterCount).each do |i|
        config.vm.define "k8s-master-#{i}" do |master|
            master.vm.box = "ubuntu-22.04.3"
            master.vm.hostname = "k8s-master-#{i}"
            master.vm.network "private_network", ip: "172.16.2.1#{i}"
            master.vm.provider "virtualbox" do |vm|
                vm.name = "k8s-master-#{i}"
                vm.memory = 4096
                vm.cpus = 2
            end
        end
    end

    WorkerCount = 1
    (1..WorkerCount).each do |i|
        config.vm.define "k8s-worker-#{i}" do |worker|
            worker.vm.box = "ubuntu-22.04.3"
            worker.vm.hostname = "k8s-worker-#{i}"
            worker.vm.network "private_network", ip: "172.16.3.1#{i}"
            worker.vm.provider "virtualbox" do |vm|
                vm.name = "k8s-worker-#{i}"
                vm.memory = 4096
                vm.cpus = 2
            end
        end
    end

    config.ssh.username = "root"
    config.ssh.password = "root"

    config.vm.provision "shell" do |s|
        ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
        s.inline = <<-SHELL
            # Create ci user
            # useradd -s /bin/bash -d /home/ci/ -m -G sudo ci
            # echo 'ci ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
            # mkdir -p /home/ci/.ssh && chown -R ci /home/ci/.ssh
            # echo #{ssh_pub_key} >> /home/ci/.ssh/authorized_keys
            echo #{ssh_pub_key} >> /root/.ssh/authorized_keys
        SHELL
    end

end
